name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: Test API
    runs-on: ubuntu-latest
    steps:
      # Checkout your project with git
      - name: Checkout
        uses: actions/checkout@v2

      # Install Go on the VM running the action.
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23.4
      
      # Install gotestfmt on the VM running the action.
      # - name: Set up gotestfmt
      #   uses: gotesttools/gotestfmt-action@v2
      #   with:
      #     # Optional: pass GITHUB_TOKEN to avoid rate limiting.
      #     token: ${{ secrets.GITHUB_TOKEN }}
      
      # Alternatively, install using go install
      - name: Set up gotestfmt
        run: go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest

      # Install gocover-cobertura on the VM running the action.
      - name: go mod package cache
        working-directory: Rivall-Backend
        run: |
          go get github.com/boumenot/gocover-cobertura
      
      # Run API Tests
      - name: Run tests
        working-directory: Rivall-Backend
        run: |
          set -euo pipefail
          go test -race -json -v -coverprofile=coverage.txt ./api/resources... ./api/router... 2>&1 | tee /tmp/gotest.log | gotestfmt
      
      # Convert go coverage to corbetura format
      - name: Convert go coverage to corbetura format
        working-directory: Rivall-Backend
        run: go run github.com/boumenot/gocover-cobertura < coverage.txt > coverage.cobertura.xml
      
      # Generate code coverage report
      - name: Generate code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: Rivall-Backend/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '80 90'

      # Add Coverage PR Comment
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'push'
        with:
          recreate: true
          path: code-coverage-results.md